import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

def MAXSTAR_SDK_DIR = '../../3rdparty/MaxstAR/lib'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.maxst.surfaceEncoder"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

	sourceSets.main {
		jniLibs.srcDir 'libs'
		jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
	}
	// call regular ndk-build(.cmd) script from app directory
	task ndkBuild(type: Exec) {
		if (Os.isFamily(Os.FAMILY_WINDOWS)) {
			commandLine 'ndk-build.cmd', '-C', file('./').absolutePath
		} else {
			def ndkDir = android.ndkDirectory.getAbsolutePath();
			commandLine ndkDir + "/ndk-build", '-C', file('./').absolutePath
		}
	}

	tasks.withType(JavaCompile) {
		compileTask -> compileTask.dependsOn ndkBuild
	}
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.1.0'
	compile 'gun0912.ted:tedpermission:1.0.3'
	compile 'com.jakewharton:butterknife:7.0.1'
	compile files("$MAXSTAR_SDK_DIR/VideoPlayer.jar")
	compile files("$MAXSTAR_SDK_DIR/MaxstAR.jar")
}
